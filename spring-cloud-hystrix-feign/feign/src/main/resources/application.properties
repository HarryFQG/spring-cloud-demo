server.port=8056
spring.application.name=feign-consumer
#自定义负载均衡的位置，stores这个随便写，但是后面的值需要规则写，默认是轮询算法。这里两个服务都写死了，不好。而且还有单点故障，
#stores.ribbon.listOfServers=localhost:8050,localhost:8053
#随机分配
#stores.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

#解决服务不写死，其实就是生产者的地址。（动态生产者地址）
eureka.client.service-url.defaultZone=http://localhost:8050/eureka/,http://localhost:8051/eureka/
#网关的配置,eureka-service:这个是随便取的，建议使用服务的名字；path：请求包含的;serviceId：eureka-service，真实的服务，他是将path映射到这里。如果我们使用的不是Eureka注册中心则需要把serviceId换成url
zuul.routes.eureka-service.path=/my-service/**
zuul.routes.eureka-service.serviceId=feign-consumer
#本地跳转就是将包含/my-service/的路径都跳转到本地
zuul.routes.eureka-service.url=forward:local
#对这个服务进行请求头的配置
#zuul.routes.eureka-service.sensitiveHeaders
#忽略表达式,忽略的是路径
zuul.ignored-patterns=/hello-service/
#所有的请求都得加上这个前缀
zuul.prefix=/ccc/**
#zuul不能使用cookie，在这里可以配置一些敏感的信息。全局
#zuul.sensitive-headers=
#过滤器的禁用:zuul.<SimpleClassName>.<filterType>.disable=true
zuul.TokenFilter.pre.disable=true

#全局额连接超时
ribbon.connectTimeout=500
#指定远程消费者的连接超时
eureka-consumer.ribbon.connectTime=1000
#发生超时是是否终端默认为true，这里配置的是超时的时间
hystrix.command.default.execution.isolation.thread.timeoutinMilliseconds=5000
